# Simple Combat Log
# By Shane Bee

# This simple example shows you how to setup a combat timer

# Requirements: SkBee
options:
	# Time you want combat log to last
	combat_time: 15 seconds
	# Prefix for action bar
	prefix: &7[&bCombat&7]

function combatTimer(p: player):
	if {-combat::%uuid of {_p}%} is not set:
		set {-combat::%uuid of {_p}%} to {@combat_time} from now
		while {-combat::%uuid of {_p}%} is set:
			if {-combat::%uuid of {_p}%} > now:
				set {_diff} to (seconds of (difference between {-combat::%uuid of {_p}%} and now)) + 1
				send action bar "{@prefix} &cYou're in combat for %{_diff}% seconds!" to {_p}
			else:
				delete {-combat::%uuid of {_p}%}
			wait 5 ticks
		send action bar "{@prefix} &aYou're out of combat!" to {_p}
	else:
		set {-combat::%uuid of {_p}%} to {@combat_time} from now

function checkCombat(p: player) :: boolean:
	if {-combat::%uuid of {_p}%} > now:
		return true
	else:
		delete {-combat::%uuid of {_p}%}
		return false

# Activate the combat timer
on damage of player:
	if attacker is a player:
		combatTimer(attacker)
		combatTimer(victim)

# Cancel event if timer is going
# Add other events you see fit
on break:
	if checkCombat(player) = true:
		cancel event
		send "{@prefix} &cYou cant break blocks in combat"

# Kill player if timer logs out
on quit:
	if checkCombat(player) = true:
		kill player
	delete {-combat::%uuid of player%}
