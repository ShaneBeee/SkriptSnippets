# Server Stats
# By ShaneBee

# THIS IS NOT PRODUCTION SAFE
# IT IS NOT EFFICIENT AT ALL
# USE WITH CAUTION

# Requirements: SkBee, skript-reflect, MC 1.20+, Skript 2.7+
# Optional: NMS-API (for custom biome support in biome bar, can be found at `https://github.com/ShaneBeee/NMS-API`)

function updateChunks():
	wait 1 tick
	set {-cw} to size of loaded chunks of world "world"
	set {-cn} to size of loaded chunks of world "world_nether"

on load:
	set {-grad} to -1
	set {-srv} to server.getServer()
	updateChunks()

every tick:
	set {-at} to {-srv}.getAverageTickTime()
	if {-at} > 15:
		set {-lagging} to true
	else if {-at} < 8:
		set {-lagging} to false

	set {_p} to {-at}
	if {_p} > 40:
		set {_p} to 40
	set {_p} to {_p} / 40

	set {_m} to mini message from "<transition:##17FA04:##F3FA04:##FA7804:##FA1704:%{_p}%>%{-at}%"
	set {-tick} to {_m} #this stupidness is to prevent "you cant save a mini message" warning

	add 0.025 to {-grad}
	if {-grad} > 1:
		set {-grad} to -1

on chunk load:
	updateChunks()

on chunk unload:
	updateChunks()

every second:
	set {_t::*} to tps
	loop {_t::*}:
		if loop-value > 18:
			set {_tps::%loop-index%} to "&a%loop-value%"
		else if loop-value > 15:
			set {_tps::%loop-index%} to "&e%loop-value%"
		else:
			set {_tps::%loop-index%} to "&c%loop-value%"
	set {-tps} to join {_tps::*} using "&7, "

function updateBoard(p: player):
	set line 15 of {_p}'s scoreboard to "<##11C3D8>Loaded Chunks:"
	set line 12 of {_p}'s scoreboard to "<##11C3D8>Average Tick:"
	set line 10 of {_p}'s scoreboard to "<##11C3D8>TPS:"
	set line 8 of {_p}'s scoreboard to "<##11C3D8>Entities: &7(<##11D875>ticking&7/<##11D875>total&7)"
	while {_p} is online:
		if {-boards} is not set:
			exit loop
		set {_m} to mini message from "<grey>---[<gradient:##F008F4:##08F4B4:%{-grad}%>SERVER STATS<grey>]---"
		set title of {_p}'s scoreboard to {_m}
		set line 14 of {_p}'s scoreboard to "&7- &bWorld: <##78D811>%{-cw}%"
		set line 13 of {_p}'s scoreboard to "&7- &bNether: <##D85C11>%{-cn}%"
		set line 11 of {_p}'s scoreboard to "&7- %{-tick}%&7ms"
		set line 9 of {_p}'s scoreboard to "&7- <##11D875>%{-tps}%"
		set line 7 of {_p}'s scoreboard to "&7- &bAll: <##11D875>%size of all entities where [input is ticking]%&7/<##11D875>%size of all entities%"
		set line 6 of {_p}'s scoreboard to "&7- &bMobs: <##11D875>%size of all mobs where [input is ticking]%&7/<##11D875>%size of all mobs%"
		set line 5 of {_p}'s scoreboard to "&7- &bEnemies: <##11D875>%size of all enemies where [input is ticking]%&7/<##11D875>%size of all enemies%"
		set line 4 of {_p}'s scoreboard to "&7- &bDisplay: <##11D875>%size of all displays where [input is ticking]%&7/<##11D875>%size of all displays%"
		set line 3 of {_p}'s scoreboard to "&7- &bVillagers: <##11D875>%size of all villagers where [input is ticking]%&7/<##11D875>%size of all villagers%"
		set {_f} to size of all entities where ["%input%" contains "falling"]
		set {_ft} to size of (all entities where ["%input%" contains "falling"]) where [input is ticking]
		set line 2 of {_p}'s scoreboard to "&7- &bFalling: <##11D875>%{_ft}%&7/<##11D875>%{_f}%"
		set line 1 of {_p}'s scoreboard to "&7- &bDropped: <##11D875>%size of all dropped items where [input is ticking]%&7/<##11D875>%size of all dropped items%"
		wait 1 tick

on join:
	updateBoard(player)

on unload:
	delete {-boards}

on load:
	set {-biomebar} to true
	wait 2 ticks
	set {-boards} to true
	loop all players:
		updateBoard(loop-player)

command /stats [<text>]:
	trigger:
		if arg-1 = "sidebar":
			toggle scoreboard of player
		else if arg-1 = "rambar":
			ramBar()
		else if arg-1 = "biomebar":
			if {-biomebar} is not set:
				set {-biomebar} to true
			else:
				delete {-biomebar}
				send action bar "" to player
		else:
			send "&7[&bStats&7] &cInvalid option &r'&7/stats <biomebar|sidebar>&r'"

on tab complete of "/stats":
	set tab completions for position 1 to "sidebar", "rambar" and "biomebar"

#! SHOW BIOME BAR !#
# NMS-API adds the ability to see custom biomes (from datapacks)
# Without said API, you will only see vanilla biomes

on load:
	parse if class "com.shanebeestudios.nms.api.world.WorldApi" exists:
		set {-worldapi} to class "com.shanebeestudios.nms.api.world.WorldApi"

every tick:
	if {-biomebar} is set:
		loop all players:
			if loop-player's tool is a debug stick:
				continue
			if {-worldapi} is set:
				set {_b} to {-worldapi}.getBiome(location of loop-player)
			else:
				set {_b} to namespaced key of biome at loop-player
			set {_b} to "%{_b}%"
			replace "minecraft:" with "&bminecraft&r:&e" in {_b}
			replace "wythers:" with "&awythers&r:&e" in {_b}
			replace "skbee:" with "<##FFA533>skbee&r:&e" in {_b}
			replace "terralith:" with "<##D01ED8>terralith&r:&e" in {_b}
			send action bar "&7Biome: %{_b}%" to loop-player

#! RAM BAR !#
import:
	java.lang.Runtime

on load:
	if {-bar} is not set:
		ramBar()

on unload:
	delete bossbar with id "ram"
	delete {-bar}

on join:
	add player to {-bar}

function ramBar():
	if {-bar} is not set:
		set {_run} to Runtime.getRuntime()
		set {_max} to {_run}.maxMemory() / 1024 / 1024
		set {-bar} to boss bar with id "ram" with title "FILL IN" with color blue with style solid_bar
		add all players to {-bar}
		while {-bar} is set:
			set {_free} to {_run}.freeMemory() / 1024 / 1024
			set {_used} to {_max} - {_free}
			set bar title of {-bar} to "&7Ram: &b%{_used}%&7mb / &b%{_max}%&7mb"
			set {_pro} to ({_used} / {_max}) * 100
			set bar progress of {-bar} to {_pro}
			if {_pro} > 90:
				set bar color of {-bar} to red
			else if {_pro} > 75:
				set bar color of {-bar} to yellow
			else:
				set bar color of {-bar} to green
			wait 10 ticks
	else:
		delete boss bar with id "ram"
		delete {-bar}
